// sdi_ip_ii_tx_0002.v

// This file was auto-generated from sdi_ii_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 15.0 145

`timescale 1 ps / 1 ps
module sdi_ip_ii_tx_0002 #(
		parameter FAMILY               = "Cyclone V",
		parameter VIDEO_STANDARD       = "hd",
		parameter SD_BIT_WIDTH         = 10,
		parameter DIRECTION            = "tx",
		parameter TRANSCEIVER_PROTOCOL = "xcvr_proto",
		parameter HD_FREQ              = "148.5",
		parameter XCVR_TX_PLL_SEL      = 0,
		parameter RX_INC_ERR_TOLERANCE = 0,
		parameter RX_CRC_ERROR_OUTPUT  = 0,
		parameter RX_EN_VPID_EXTRACT   = 0,
		parameter RX_EN_A2B_CONV       = 0,
		parameter RX_EN_B2A_CONV       = 0,
		parameter TX_EN_VPID_INSERT    = 0,
		parameter IS_RTL_SIM           = 0
	) (
		input  wire         tx_rst,             //             tx_rst.reset
		input  wire         tx_enable_crc,      //      tx_enable_crc.export
		input  wire         tx_enable_ln,       //       tx_enable_ln.export
		input  wire [10:0]  tx_ln,              //              tx_ln.export
		input  wire [19:0]  tx_datain,          //          tx_datain.export
		input  wire         tx_datain_valid,    //    tx_datain_valid.export
		input  wire         tx_trs,             //             tx_trs.export
		output wire         tx_dataout_valid,   //   tx_dataout_valid.export
		input  wire         tx_pclk,            //            tx_pclk.clk
		input  wire         tx_coreclk,         //         tx_coreclk.clk
		input  wire         xcvr_refclk,        //        xcvr_refclk.clk
		output wire         sdi_tx,             //             sdi_tx.export
		output wire         tx_pll_locked,      //      tx_pll_locked.export
		output wire         tx_clkout,          //          tx_clkout.clk
		input  wire [139:0] reconfig_to_xcvr,   //   reconfig_to_xcvr.reconfig_to_xcvr
		output wire [91:0]  reconfig_from_xcvr  // reconfig_from_xcvr.reconfig_from_xcvr
	);

	wire   [19:0] u_tx_phy_mgmt_xcvr_tx_dataout_export;                 // u_tx_phy_mgmt:xcvr_tx_dataout -> u_phy_adapter:xcvr_tx_datain
	wire    [0:0] u_phy_pll_locked_pll_locked;                          // u_phy:pll_locked -> [u_phy_adapter:tx_pll_locked_from_xcvr, u_tx_phy_rst_ctrl:pll_locked]
	wire   [19:0] u_tx_protocol_tx_dataout_export;                      // u_tx_protocol:tx_dataout -> u_tx_phy_mgmt:tx_datain
	wire          u_tx_protocol_tx_dataout_valid_export;                // u_tx_protocol:tx_dataout_valid -> u_tx_phy_mgmt:tx_datain_valid
	wire          tx_rst_pclk_sync_reset_out_reset;                     // tx_rst_pclk_sync:reset_out -> [u_tx_phy_mgmt:tx_rst, u_tx_protocol:tx_rst]
	wire          tx_rst_coreclk_sync_reset_out_reset;                  // tx_rst_coreclk_sync:reset_out -> u_tx_phy_rst_ctrl:reset
	wire    [0:0] u_tx_phy_rst_ctrl_pll_powerdown_pll_powerdown;        // u_tx_phy_rst_ctrl:pll_powerdown -> u_phy:pll_powerdown
	wire    [0:0] u_tx_phy_rst_ctrl_tx_analogreset_tx_analogreset;      // u_tx_phy_rst_ctrl:tx_analogreset -> u_phy:tx_analogreset
	wire    [0:0] u_tx_phy_rst_ctrl_tx_digitalreset_tx_digitalreset;    // u_tx_phy_rst_ctrl:tx_digitalreset -> u_phy:tx_digitalreset
	wire    [0:0] u_phy_tx_cal_busy_tx_cal_busy;                        // u_phy:tx_cal_busy -> u_tx_phy_rst_ctrl:tx_cal_busy
	wire          u_phy_adapter_tx_pll_select_to_xcvr_rst_pll_select;   // u_phy_adapter:tx_pll_select_to_xcvr_rst -> u_tx_phy_rst_ctrl:pll_select
	wire    [0:0] u_tx_phy_rst_ctrl_tx_ready_tx_ready;                  // u_tx_phy_rst_ctrl:tx_ready -> u_phy_adapter:xcvr_tx_ready
	wire  [139:0] u_phy_adapter_xcvr_reconfig_to_xcvr_reconfig_to_xcvr; // u_phy_adapter:xcvr_reconfig_to_xcvr -> u_phy:reconfig_to_xcvr
	wire   [91:0] u_phy_reconfig_from_xcvr_reconfig_from_xcvr;          // u_phy:reconfig_from_xcvr -> u_phy_adapter:xcvr_reconfig_from_xcvr
	wire          u_phy_adapter_tx_std_coreclkin_tx_std_coreclkin;      // u_phy_adapter:tx_std_coreclkin -> u_phy:tx_std_coreclkin
	wire          u_phy_adapter_tx_pll_refclk_tx_pll_refclk;            // u_phy_adapter:tx_pll_refclk -> u_phy:tx_pll_refclk
	wire    [0:0] u_phy_tx_std_clkout_tx_std_clkout;                    // u_phy:tx_std_clkout -> u_phy_adapter:tx_clkout_from_xcvr
	wire   [43:0] u_phy_adapter_tx_datain_to_xcvr_tx_parallel_data;     // u_phy_adapter:tx_datain_to_xcvr -> u_phy:tx_parallel_data
	wire    [0:0] u_phy_tx_serial_data_tx_serial_data;                  // u_phy:tx_serial_data -> u_phy_adapter:sdi_tx_from_xcvr

	generate
		// If any of the display statements (or deliberately broken
		// instantiations) within this generate block triggers then this module
		// has been instantiated this module with a set of parameters different
		// from those it was generated for.  This will usually result in a
		// non-functioning system.
		if (FAMILY != "Cyclone V")
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					family_check ( .error(1'b1) );
		end
		if (VIDEO_STANDARD != "hd")
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					video_standard_check ( .error(1'b1) );
		end
		if (SD_BIT_WIDTH != 10)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					sd_bit_width_check ( .error(1'b1) );
		end
		if (DIRECTION != "tx")
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					direction_check ( .error(1'b1) );
		end
		if (TRANSCEIVER_PROTOCOL != "xcvr_proto")
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					transceiver_protocol_check ( .error(1'b1) );
		end
		if (HD_FREQ != "148.5")
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					hd_freq_check ( .error(1'b1) );
		end
		if (XCVR_TX_PLL_SEL != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					xcvr_tx_pll_sel_check ( .error(1'b1) );
		end
		if (RX_INC_ERR_TOLERANCE != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					rx_inc_err_tolerance_check ( .error(1'b1) );
		end
		if (RX_CRC_ERROR_OUTPUT != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					rx_crc_error_output_check ( .error(1'b1) );
		end
		if (RX_EN_VPID_EXTRACT != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					rx_en_vpid_extract_check ( .error(1'b1) );
		end
		if (RX_EN_A2B_CONV != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					rx_en_a2b_conv_check ( .error(1'b1) );
		end
		if (RX_EN_B2A_CONV != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					rx_en_b2a_conv_check ( .error(1'b1) );
		end
		if (TX_EN_VPID_INSERT != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					tx_en_vpid_insert_check ( .error(1'b1) );
		end
		if (IS_RTL_SIM != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					is_rtl_sim_check ( .error(1'b1) );
		end
	endgenerate

	sdi_ii_phy_adapter #(
		.FAMILY            ("Cyclone V"),
		.VIDEO_STANDARD    ("hd"),
		.DIRECTION         ("tx"),
		.XCVR_TX_PLL_SEL   (0),
		.ED_TXPLL_SWITCH   (0),
		.XCVR_RST_CTRL_CHS (1)
	) u_phy_adapter (
		.xcvr_refclk                 (xcvr_refclk),                                                                                                                                       //               xcvr_refclk.clk
		.tx_pclk                     (tx_pclk),                                                                                                                                           //                   tx_pclk.clk
		.tx_clkout                   (tx_clkout),                                                                                                                                         //                 tx_clkout.clk
		.reconfig_from_xcvr          (reconfig_from_xcvr),                                                                                                                                //        reconfig_from_xcvr.reconfig_from_xcvr
		.reconfig_to_xcvr            (reconfig_to_xcvr),                                                                                                                                  //          reconfig_to_xcvr.reconfig_to_xcvr
		.xcvr_reconfig_from_xcvr     (u_phy_reconfig_from_xcvr_reconfig_from_xcvr),                                                                                                       //   xcvr_reconfig_from_xcvr.reconfig_from_xcvr
		.xcvr_reconfig_to_xcvr       (u_phy_adapter_xcvr_reconfig_to_xcvr_reconfig_to_xcvr),                                                                                              //     xcvr_reconfig_to_xcvr.reconfig_to_xcvr
		.tx_pll_refclk               (u_phy_adapter_tx_pll_refclk_tx_pll_refclk),                                                                                                         //             tx_pll_refclk.tx_pll_refclk
		.tx_std_coreclkin            (u_phy_adapter_tx_std_coreclkin_tx_std_coreclkin),                                                                                                   //          tx_std_coreclkin.tx_std_coreclkin
		.sdi_tx_from_xcvr            (u_phy_tx_serial_data_tx_serial_data),                                                                                                               //          sdi_tx_from_xcvr.tx_serial_data
		.tx_pll_locked_from_xcvr     (u_phy_pll_locked_pll_locked),                                                                                                                       //   tx_pll_locked_from_xcvr.pll_locked
		.sdi_tx                      (sdi_tx),                                                                                                                                            //                    sdi_tx.export
		.tx_pll_locked               (tx_pll_locked),                                                                                                                                     //             tx_pll_locked.export
		.xcvr_tx_datain              (u_tx_phy_mgmt_xcvr_tx_dataout_export),                                                                                                              //            xcvr_tx_datain.export
		.tx_datain_to_xcvr           (u_phy_adapter_tx_datain_to_xcvr_tx_parallel_data),                                                                                                  //         tx_datain_to_xcvr.tx_parallel_data
		.tx_pll_select_to_xcvr_rst   (u_phy_adapter_tx_pll_select_to_xcvr_rst_pll_select),                                                                                                // tx_pll_select_to_xcvr_rst.pll_select
		.tx_clkout_from_xcvr         (u_phy_tx_std_clkout_tx_std_clkout),                                                                                                                 //       tx_clkout_from_xcvr.tx_std_clkout
		.xcvr_tx_ready               (u_tx_phy_rst_ctrl_tx_ready_tx_ready),                                                                                                               //             xcvr_tx_ready.tx_ready
		.xcvr_refclk_alt             (1'b0),                                                                                                                                              //               (terminated)
		.reconfig_clk_in             (1'b0),                                                                                                                                              //               (terminated)
		.xcvr_rxclk                  (),                                                                                                                                                  //               (terminated)
		.xcvr_rxclk_b                (),                                                                                                                                                  //               (terminated)
		.reconfig_rst_in             (1'b0),                                                                                                                                              //               (terminated)
		.reset_to_xcvr_rst_ctrl      (),                                                                                                                                                  //               (terminated)
		.reset_to_xcvr_rst_ctrl_b    (),                                                                                                                                                  //               (terminated)
		.reconfig_from_xcvr_b        (),                                                                                                                                                  //               (terminated)
		.reconfig_to_xcvr_b          (140'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), //               (terminated)
		.xcvr_reconfig_from_xcvr_b   (92'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                  //               (terminated)
		.xcvr_reconfig_to_xcvr_b     (),                                                                                                                                                  //               (terminated)
		.xcvr_refclk_sel             (1'b0),                                                                                                                                              //               (terminated)
		.tx_pll_locked_alt           (),                                                                                                                                                  //               (terminated)
		.tx_pll_refclk_b             (),                                                                                                                                                  //               (terminated)
		.tx_std_coreclkin_b          (),                                                                                                                                                  //               (terminated)
		.sdi_tx_from_xcvr_b          (1'b0),                                                                                                                                              //               (terminated)
		.sdi_tx_b                    (),                                                                                                                                                  //               (terminated)
		.rx_std_coreclkin            (),                                                                                                                                                  //               (terminated)
		.rx_pma_clkout               (1'b0),                                                                                                                                              //               (terminated)
		.trig_rst_ctrl               (1'b0),                                                                                                                                              //               (terminated)
		.sdi_rx                      (1'b0),                                                                                                                                              //               (terminated)
		.rx_set_locktodata           (1'b0),                                                                                                                                              //               (terminated)
		.sdi_rx_to_xcvr              (),                                                                                                                                                  //               (terminated)
		.rx_set_locktodata_to_xcvr   (),                                                                                                                                                  //               (terminated)
		.rx_set_locktoref_to_xcvr    (),                                                                                                                                                  //               (terminated)
		.rx_pll_locked               (),                                                                                                                                                  //               (terminated)
		.rx_std_coreclkin_b          (),                                                                                                                                                  //               (terminated)
		.rx_pma_clkout_b             (1'b0),                                                                                                                                              //               (terminated)
		.trig_rst_ctrl_b             (1'b0),                                                                                                                                              //               (terminated)
		.sdi_rx_b                    (1'b0),                                                                                                                                              //               (terminated)
		.rx_set_locktodata_b         (1'b0),                                                                                                                                              //               (terminated)
		.sdi_rx_to_xcvr_b            (),                                                                                                                                                  //               (terminated)
		.rx_set_locktodata_to_xcvr_b (),                                                                                                                                                  //               (terminated)
		.rx_set_locktoref_to_xcvr_b  (),                                                                                                                                                  //               (terminated)
		.rx_pll_locked_b             (),                                                                                                                                                  //               (terminated)
		.reconfig_clk_out            (),                                                                                                                                                  //               (terminated)
		.reconfig_rst_out            (),                                                                                                                                                  //               (terminated)
		.tx_serial_clk_out           (),                                                                                                                                                  //               (terminated)
		.tx_serial_clk_alt_out       (),                                                                                                                                                  //               (terminated)
		.pll_powerdown_in            (2'b00),                                                                                                                                             //               (terminated)
		.pll_powerdown_out           (),                                                                                                                                                  //               (terminated)
		.pll_powerdown_out_b         (),                                                                                                                                                  //               (terminated)
		.pll_locked_in               (1'b0),                                                                                                                                              //               (terminated)
		.pll_locked_in_b             (1'b0),                                                                                                                                              //               (terminated)
		.pll_locked_out              (),                                                                                                                                                  //               (terminated)
		.tx_cal_busy_in              (1'b0),                                                                                                                                              //               (terminated)
		.pll_cal_busy_in             (1'b0),                                                                                                                                              //               (terminated)
		.pll_cal_busy_in_alt         (1'b0),                                                                                                                                              //               (terminated)
		.xcvr_tx_datain_b            (20'b00000000000000000000),                                                                                                                          //               (terminated)
		.tx_datain_to_xcvr_b         (),                                                                                                                                                  //               (terminated)
		.tx_analogreset_in           (2'b00),                                                                                                                                             //               (terminated)
		.tx_analogreset_out          (),                                                                                                                                                  //               (terminated)
		.tx_analogreset_out_b        (),                                                                                                                                                  //               (terminated)
		.tx_digitalreset_in          (2'b00),                                                                                                                                             //               (terminated)
		.tx_digitalreset_out         (),                                                                                                                                                  //               (terminated)
		.tx_digitalreset_out_b       (),                                                                                                                                                  //               (terminated)
		.tx_cal_busy_in_b            (1'b0),                                                                                                                                              //               (terminated)
		.tx_pll_select_to_xcvr_rst_b (),                                                                                                                                                  //               (terminated)
		.xcvr_tx_ready_b             (1'b0),                                                                                                                                              //               (terminated)
		.rx_dataout_from_xcvr        (64'b0000000000000000000000000000000000000000000000000000000000000000),                                                                              //               (terminated)
		.xcvr_rx_is_lockedtoref      (1'b0),                                                                                                                                              //               (terminated)
		.xcvr_rx_is_lockedtodata     (1'b0),                                                                                                                                              //               (terminated)
		.xcvr_rx_dataout             (),                                                                                                                                                  //               (terminated)
		.rx_dataout_from_xcvr_b      (64'b0000000000000000000000000000000000000000000000000000000000000000),                                                                              //               (terminated)
		.xcvr_rx_is_lockedtoref_b    (1'b0),                                                                                                                                              //               (terminated)
		.xcvr_rx_is_lockedtodata_b   (1'b0),                                                                                                                                              //               (terminated)
		.xcvr_rx_dataout_b           (),                                                                                                                                                  //               (terminated)
		.rx_analogreset_in           (2'b00),                                                                                                                                             //               (terminated)
		.rx_analogreset_out          (),                                                                                                                                                  //               (terminated)
		.rx_analogreset_out_b        (),                                                                                                                                                  //               (terminated)
		.rx_digitalreset_in          (2'b00),                                                                                                                                             //               (terminated)
		.rx_digitalreset_out         (),                                                                                                                                                  //               (terminated)
		.rx_digitalreset_out_b       (),                                                                                                                                                  //               (terminated)
		.rx_cal_busy_in              (1'b0),                                                                                                                                              //               (terminated)
		.rx_cal_busy_in_b            (1'b0),                                                                                                                                              //               (terminated)
		.rx_cal_busy_out             (),                                                                                                                                                  //               (terminated)
		.rx_locked_to_xcvr_ctrl_b    (),                                                                                                                                                  //               (terminated)
		.rx_manual_b                 (),                                                                                                                                                  //               (terminated)
		.rx_ready_from_xcvr_b        (1'b0),                                                                                                                                              //               (terminated)
		.tx_serial_clk_in            (1'b0),                                                                                                                                              //               (terminated)
		.tx_serial_clk_alt_in        (1'b0),                                                                                                                                              //               (terminated)
		.xcvr_rx_ready               (),                                                                                                                                                  //               (terminated)
		.xcvr_rx_ready_b             (),                                                                                                                                                  //               (terminated)
		.rx_cdr_refclk               (),                                                                                                                                                  //               (terminated)
		.rx_set_locktoref            (1'b0),                                                                                                                                              //               (terminated)
		.rxclk_from_xcvr             (1'b0),                                                                                                                                              //               (terminated)
		.tx_clkout_from_xcvr_b       (1'b0),                                                                                                                                              //               (terminated)
		.rx_cdr_refclk_b             (),                                                                                                                                                  //               (terminated)
		.rxclk_from_xcvr_b           (1'b0),                                                                                                                                              //               (terminated)
		.rx_set_locktoref_b          (1'b0),                                                                                                                                              //               (terminated)
		.tx_cal_busy_out             (),                                                                                                                                                  //               (terminated)
		.rx_locked_to_xcvr_ctrl      (),                                                                                                                                                  //               (terminated)
		.rx_manual                   (),                                                                                                                                                  //               (terminated)
		.rx_ready_from_xcvr          (1'b0)                                                                                                                                               //               (terminated)
	);

	altera_xcvr_native_av #(
		.tx_enable                       (1),
		.rx_enable                       (0),
		.enable_std                      (1),
		.data_path_select                ("standard"),
		.channels                        (1),
		.bonded_mode                     ("non_bonded"),
		.data_rate                       ("1485 Mbps"),
		.pma_width                       (10),
		.tx_pma_clk_div                  (2),
		.pll_reconfig_enable             (0),
		.pll_external_enable             (0),
		.pll_data_rate                   ("2970 Mbps"),
		.pll_type                        ("CMU"),
		.pma_bonding_mode                ("x1"),
		.plls                            (1),
		.pll_select                      (0),
		.pll_refclk_cnt                  (1),
		.pll_refclk_select               ("0"),
		.pll_refclk_freq                 ("148.5 MHz"),
		.pll_feedback_path               ("internal"),
		.cdr_reconfig_enable             (0),
		.cdr_refclk_cnt                  (1),
		.cdr_refclk_select               (0),
		.cdr_refclk_freq                 ("148.5 MHz"),
		.rx_ppm_detect_threshold         ("1000"),
		.rx_clkslip_enable               (0),
		.std_protocol_hint               ("basic"),
		.std_pcs_pma_width               (10),
		.std_low_latency_bypass_enable   (0),
		.std_tx_pcfifo_mode              ("low_latency"),
		.std_rx_pcfifo_mode              ("low_latency"),
		.std_rx_byte_order_enable        (0),
		.std_rx_byte_order_mode          ("manual"),
		.std_rx_byte_order_width         (10),
		.std_rx_byte_order_symbol_count  (1),
		.std_rx_byte_order_pattern       ("0"),
		.std_rx_byte_order_pad           ("0"),
		.std_tx_byte_ser_enable          (1),
		.std_rx_byte_deser_enable        (1),
		.std_tx_8b10b_enable             (0),
		.std_tx_8b10b_disp_ctrl_enable   (0),
		.std_rx_8b10b_enable             (0),
		.std_rx_rmfifo_enable            (0),
		.std_rx_rmfifo_pattern_p         ("00000"),
		.std_rx_rmfifo_pattern_n         ("00000"),
		.std_tx_bitslip_enable           (0),
		.std_rx_word_aligner_mode        ("bit_slip"),
		.std_rx_word_aligner_pattern_len (7),
		.std_rx_word_aligner_pattern     ("0000000000"),
		.std_rx_word_aligner_rknumber    (3),
		.std_rx_word_aligner_renumber    (3),
		.std_rx_word_aligner_rgnumber    (3),
		.std_rx_run_length_val           (31),
		.std_tx_bitrev_enable            (0),
		.std_rx_bitrev_enable            (0),
		.std_tx_byterev_enable           (0),
		.std_rx_byterev_enable           (0),
		.std_tx_polinv_enable            (0),
		.std_rx_polinv_enable            (0)
	) u_phy (
		.pll_powerdown             (u_tx_phy_rst_ctrl_pll_powerdown_pll_powerdown),                                        //      pll_powerdown.pll_powerdown
		.tx_analogreset            (u_tx_phy_rst_ctrl_tx_analogreset_tx_analogreset),                                      //     tx_analogreset.tx_analogreset
		.tx_digitalreset           (u_tx_phy_rst_ctrl_tx_digitalreset_tx_digitalreset),                                    //    tx_digitalreset.tx_digitalreset
		.tx_pll_refclk             (u_phy_adapter_tx_pll_refclk_tx_pll_refclk),                                            //      tx_pll_refclk.tx_pll_refclk
		.tx_serial_data            (u_phy_tx_serial_data_tx_serial_data),                                                  //     tx_serial_data.tx_serial_data
		.pll_locked                (u_phy_pll_locked_pll_locked),                                                          //         pll_locked.pll_locked
		.tx_parallel_data          (u_phy_adapter_tx_datain_to_xcvr_tx_parallel_data),                                     //   tx_parallel_data.tx_parallel_data
		.tx_std_coreclkin          (u_phy_adapter_tx_std_coreclkin_tx_std_coreclkin),                                      //   tx_std_coreclkin.tx_std_coreclkin
		.tx_std_clkout             (u_phy_tx_std_clkout_tx_std_clkout),                                                    //      tx_std_clkout.tx_std_clkout
		.tx_cal_busy               (u_phy_tx_cal_busy_tx_cal_busy),                                                        //        tx_cal_busy.tx_cal_busy
		.reconfig_to_xcvr          (u_phy_adapter_xcvr_reconfig_to_xcvr_reconfig_to_xcvr),                                 //   reconfig_to_xcvr.reconfig_to_xcvr
		.reconfig_from_xcvr        (u_phy_reconfig_from_xcvr_reconfig_from_xcvr),                                          // reconfig_from_xcvr.reconfig_from_xcvr
		.tx_pma_clkout             (),                                                                                     //        (terminated)
		.tx_pma_parallel_data      (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), //        (terminated)
		.ext_pll_clk               (1'b0),                                                                                 //        (terminated)
		.rx_analogreset            (1'b0),                                                                                 //        (terminated)
		.rx_digitalreset           (1'b0),                                                                                 //        (terminated)
		.rx_cdr_refclk             (1'b0),                                                                                 //        (terminated)
		.rx_pma_clkout             (),                                                                                     //        (terminated)
		.rx_serial_data            (1'b0),                                                                                 //        (terminated)
		.rx_pma_parallel_data      (),                                                                                     //        (terminated)
		.rx_clkslip                (1'b0),                                                                                 //        (terminated)
		.rx_clklow                 (),                                                                                     //        (terminated)
		.rx_fref                   (),                                                                                     //        (terminated)
		.rx_set_locktodata         (1'b0),                                                                                 //        (terminated)
		.rx_set_locktoref          (1'b0),                                                                                 //        (terminated)
		.rx_is_lockedtoref         (),                                                                                     //        (terminated)
		.rx_is_lockedtodata        (),                                                                                     //        (terminated)
		.rx_seriallpbken           (1'b0),                                                                                 //        (terminated)
		.rx_signaldetect           (),                                                                                     //        (terminated)
		.rx_parallel_data          (),                                                                                     //        (terminated)
		.rx_std_coreclkin          (1'b0),                                                                                 //        (terminated)
		.rx_std_clkout             (),                                                                                     //        (terminated)
		.rx_std_prbs_done          (),                                                                                     //        (terminated)
		.rx_std_prbs_err           (),                                                                                     //        (terminated)
		.tx_std_pcfifo_full        (),                                                                                     //        (terminated)
		.tx_std_pcfifo_empty       (),                                                                                     //        (terminated)
		.rx_std_pcfifo_full        (),                                                                                     //        (terminated)
		.rx_std_pcfifo_empty       (),                                                                                     //        (terminated)
		.rx_std_byteorder_ena      (1'b0),                                                                                 //        (terminated)
		.rx_std_byteorder_flag     (),                                                                                     //        (terminated)
		.rx_std_rmfifo_full        (),                                                                                     //        (terminated)
		.rx_std_rmfifo_empty       (),                                                                                     //        (terminated)
		.rx_std_wa_patternalign    (1'b0),                                                                                 //        (terminated)
		.rx_std_wa_a1a2size        (1'b0),                                                                                 //        (terminated)
		.tx_std_bitslipboundarysel (5'b00000),                                                                             //        (terminated)
		.rx_std_bitslipboundarysel (),                                                                                     //        (terminated)
		.rx_std_bitslip            (1'b0),                                                                                 //        (terminated)
		.rx_std_runlength_err      (),                                                                                     //        (terminated)
		.rx_std_bitrev_ena         (1'b0),                                                                                 //        (terminated)
		.rx_std_byterev_ena        (1'b0),                                                                                 //        (terminated)
		.tx_std_polinv             (1'b0),                                                                                 //        (terminated)
		.rx_std_polinv             (1'b0),                                                                                 //        (terminated)
		.tx_std_elecidle           (1'b0),                                                                                 //        (terminated)
		.rx_std_signaldetect       (),                                                                                     //        (terminated)
		.rx_cal_busy               ()                                                                                      //        (terminated)
	);

	altera_xcvr_reset_control #(
		.CHANNELS              (1),
		.PLLS                  (1),
		.SYS_CLK_IN_MHZ        (148),
		.SYNCHRONIZE_RESET     (0),
		.REDUCED_SIM_TIME      (0),
		.TX_PLL_ENABLE         (1),
		.T_PLL_POWERDOWN       (1000),
		.SYNCHRONIZE_PLL_RESET (0),
		.TX_ENABLE             (1),
		.TX_PER_CHANNEL        (0),
		.T_TX_DIGITALRESET     (20),
		.T_PLL_LOCK_HYST       (0),
		.EN_PLL_CAL_BUSY       (0),
		.RX_ENABLE             (0),
		.RX_PER_CHANNEL        (0),
		.T_RX_ANALOGRESET      (40),
		.T_RX_DIGITALRESET     (4000)
	) u_tx_phy_rst_ctrl (
		.clock              (tx_coreclk),                                         //           clock.clk
		.reset              (tx_rst_coreclk_sync_reset_out_reset),                //           reset.reset
		.pll_powerdown      (u_tx_phy_rst_ctrl_pll_powerdown_pll_powerdown),      //   pll_powerdown.pll_powerdown
		.tx_analogreset     (u_tx_phy_rst_ctrl_tx_analogreset_tx_analogreset),    //  tx_analogreset.tx_analogreset
		.tx_digitalreset    (u_tx_phy_rst_ctrl_tx_digitalreset_tx_digitalreset),  // tx_digitalreset.tx_digitalreset
		.tx_ready           (u_tx_phy_rst_ctrl_tx_ready_tx_ready),                //        tx_ready.tx_ready
		.pll_locked         (u_phy_pll_locked_pll_locked),                        //      pll_locked.pll_locked
		.pll_select         (u_phy_adapter_tx_pll_select_to_xcvr_rst_pll_select), //      pll_select.pll_select
		.tx_cal_busy        (u_phy_tx_cal_busy_tx_cal_busy),                      //     tx_cal_busy.tx_cal_busy
		.pll_cal_busy       (1'b0),                                               //     (terminated)
		.tx_manual          (1'b0),                                               //     (terminated)
		.rx_analogreset     (),                                                   //     (terminated)
		.rx_digitalreset    (),                                                   //     (terminated)
		.rx_ready           (),                                                   //     (terminated)
		.rx_is_lockedtodata (1'b0),                                               //     (terminated)
		.rx_cal_busy        (1'b0),                                               //     (terminated)
		.rx_manual          (1'b0),                                               //     (terminated)
		.tx_digitalreset_or (1'b0),                                               //     (terminated)
		.rx_digitalreset_or (1'b0)                                                //     (terminated)
	);

	sdi_ii_tx_protocol #(
		.VIDEO_STANDARD    ("hd"),
		.SD_BIT_WIDTH      (10),
		.TX_EN_VPID_INSERT (0)
	) u_tx_protocol (
		.tx_pclk            (tx_pclk),                               //          tx_pclk.clk
		.tx_rst             (tx_rst_pclk_sync_reset_out_reset),      //           tx_rst.reset
		.tx_datain_valid    (tx_datain_valid),                       //  tx_datain_valid.export
		.tx_trs             (tx_trs),                                //           tx_trs.export
		.tx_enable_ln       (tx_enable_ln),                          //     tx_enable_ln.export
		.tx_enable_crc      (tx_enable_crc),                         //    tx_enable_crc.export
		.tx_dataout_valid   (u_tx_protocol_tx_dataout_valid_export), // tx_dataout_valid.export
		.tx_datain          (tx_datain),                             //        tx_datain.export
		.tx_dataout         (u_tx_protocol_tx_dataout_export),       //       tx_dataout.export
		.tx_ln              (tx_ln),                                 //            tx_ln.export
		.tx_std             (3'b000),                                //      (terminated)
		.tx_std_out         (),                                      //      (terminated)
		.tx_vpid_overwrite  (1'b0),                                  //      (terminated)
		.tx_datain_b        (20'b00000000000000000000),              //      (terminated)
		.tx_datain_valid_b  (1'b0),                                  //      (terminated)
		.tx_trs_b           (1'b0),                                  //      (terminated)
		.tx_dataout_b       (),                                      //      (terminated)
		.tx_dataout_valid_b (),                                      //      (terminated)
		.tx_ln_b            (11'b00000000000),                       //      (terminated)
		.tx_vpid_byte1      (8'b00000000),                           //      (terminated)
		.tx_vpid_byte2      (8'b00000000),                           //      (terminated)
		.tx_vpid_byte3      (8'b00000000),                           //      (terminated)
		.tx_vpid_byte4      (8'b00000000),                           //      (terminated)
		.tx_vpid_byte1_b    (8'b00000000),                           //      (terminated)
		.tx_vpid_byte2_b    (8'b00000000),                           //      (terminated)
		.tx_vpid_byte3_b    (8'b00000000),                           //      (terminated)
		.tx_vpid_byte4_b    (8'b00000000),                           //      (terminated)
		.tx_line_f0         (11'b00000000000),                       //      (terminated)
		.tx_line_f1         (11'b00000000000)                        //      (terminated)
	);

	sdi_ii_tx_phy_mgmt #(
		.VIDEO_STANDARD ("hd"),
		.SD_BIT_WIDTH   (10)
	) u_tx_phy_mgmt (
		.tx_pclk            (tx_pclk),                               //          tx_pclk.clk
		.tx_rst             (tx_rst_pclk_sync_reset_out_reset),      //           tx_rst.reset
		.tx_datain_valid    (u_tx_protocol_tx_dataout_valid_export), //  tx_datain_valid.export
		.tx_dataout_valid   (tx_dataout_valid),                      // tx_dataout_valid.export
		.tx_datain          (u_tx_protocol_tx_dataout_export),       //        tx_datain.export
		.xcvr_tx_dataout    (u_tx_phy_mgmt_xcvr_tx_dataout_export),  //  xcvr_tx_dataout.export
		.tx_std             (3'b000),                                //      (terminated)
		.tx_datain_b        (20'b00000000000000000000),              //      (terminated)
		.tx_datain_valid_b  (1'b0),                                  //      (terminated)
		.tx_dataout_valid_b (),                                      //      (terminated)
		.xcvr_tx_dataout_b  ()                                       //      (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) tx_rst_coreclk_sync (
		.reset_in0      (tx_rst),                              // reset_in0.reset
		.clk            (tx_coreclk),                          //       clk.clk
		.reset_out      (tx_rst_coreclk_sync_reset_out_reset), // reset_out.reset
		.reset_req      (),                                    // (terminated)
		.reset_req_in0  (1'b0),                                // (terminated)
		.reset_in1      (1'b0),                                // (terminated)
		.reset_req_in1  (1'b0),                                // (terminated)
		.reset_in2      (1'b0),                                // (terminated)
		.reset_req_in2  (1'b0),                                // (terminated)
		.reset_in3      (1'b0),                                // (terminated)
		.reset_req_in3  (1'b0),                                // (terminated)
		.reset_in4      (1'b0),                                // (terminated)
		.reset_req_in4  (1'b0),                                // (terminated)
		.reset_in5      (1'b0),                                // (terminated)
		.reset_req_in5  (1'b0),                                // (terminated)
		.reset_in6      (1'b0),                                // (terminated)
		.reset_req_in6  (1'b0),                                // (terminated)
		.reset_in7      (1'b0),                                // (terminated)
		.reset_req_in7  (1'b0),                                // (terminated)
		.reset_in8      (1'b0),                                // (terminated)
		.reset_req_in8  (1'b0),                                // (terminated)
		.reset_in9      (1'b0),                                // (terminated)
		.reset_req_in9  (1'b0),                                // (terminated)
		.reset_in10     (1'b0),                                // (terminated)
		.reset_req_in10 (1'b0),                                // (terminated)
		.reset_in11     (1'b0),                                // (terminated)
		.reset_req_in11 (1'b0),                                // (terminated)
		.reset_in12     (1'b0),                                // (terminated)
		.reset_req_in12 (1'b0),                                // (terminated)
		.reset_in13     (1'b0),                                // (terminated)
		.reset_req_in13 (1'b0),                                // (terminated)
		.reset_in14     (1'b0),                                // (terminated)
		.reset_req_in14 (1'b0),                                // (terminated)
		.reset_in15     (1'b0),                                // (terminated)
		.reset_req_in15 (1'b0)                                 // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) tx_rst_pclk_sync (
		.reset_in0      (tx_rst),                           // reset_in0.reset
		.clk            (tx_pclk),                          //       clk.clk
		.reset_out      (tx_rst_pclk_sync_reset_out_reset), // reset_out.reset
		.reset_req      (),                                 // (terminated)
		.reset_req_in0  (1'b0),                             // (terminated)
		.reset_in1      (1'b0),                             // (terminated)
		.reset_req_in1  (1'b0),                             // (terminated)
		.reset_in2      (1'b0),                             // (terminated)
		.reset_req_in2  (1'b0),                             // (terminated)
		.reset_in3      (1'b0),                             // (terminated)
		.reset_req_in3  (1'b0),                             // (terminated)
		.reset_in4      (1'b0),                             // (terminated)
		.reset_req_in4  (1'b0),                             // (terminated)
		.reset_in5      (1'b0),                             // (terminated)
		.reset_req_in5  (1'b0),                             // (terminated)
		.reset_in6      (1'b0),                             // (terminated)
		.reset_req_in6  (1'b0),                             // (terminated)
		.reset_in7      (1'b0),                             // (terminated)
		.reset_req_in7  (1'b0),                             // (terminated)
		.reset_in8      (1'b0),                             // (terminated)
		.reset_req_in8  (1'b0),                             // (terminated)
		.reset_in9      (1'b0),                             // (terminated)
		.reset_req_in9  (1'b0),                             // (terminated)
		.reset_in10     (1'b0),                             // (terminated)
		.reset_req_in10 (1'b0),                             // (terminated)
		.reset_in11     (1'b0),                             // (terminated)
		.reset_req_in11 (1'b0),                             // (terminated)
		.reset_in12     (1'b0),                             // (terminated)
		.reset_req_in12 (1'b0),                             // (terminated)
		.reset_in13     (1'b0),                             // (terminated)
		.reset_req_in13 (1'b0),                             // (terminated)
		.reset_in14     (1'b0),                             // (terminated)
		.reset_req_in14 (1'b0),                             // (terminated)
		.reset_in15     (1'b0),                             // (terminated)
		.reset_req_in15 (1'b0)                              // (terminated)
	);

endmodule
