# on: push
# name: deploy
# jobs:
#   deploy:
#   name: deploy to cluster
#   runs-on: ubuntu-latest
#   steps:
#   - uses: actions/checkout@master
#   - name: build and push to docker
#     uses: docker/build-push-action@v1
#     with:
#       username: ${{ secrets.DOCKER_USERNAME }}
#       password: ${{ secrets.DOCKER_PASSWORD }}
#       repository: ${{ github.repository }}
#       tag_with_ref: true
#       tag_with_sha: true
#       tags: ${{ github.sha }}

name: Demo Python Workflow
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python for Demo
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies for demo Python project
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Linting project with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Testing the project using pytest
   run: |
     pip install pytest
     pip install pytest-cov
    #  pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    SUBDIRS=$(dirname $(find ./libs/ -name "Makefile")); set -e
    make -C $SUBDIRS
